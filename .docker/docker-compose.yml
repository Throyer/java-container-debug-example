version: '3'
services:

  database:
    image: postgres:13
    restart: unless-stopped
    container_name: example-database
    command:
      [
        "postgres",
        "-c",
        "log_statement=all",
        "-c",
        "log_destination=stderr",
        "-p",
        "${DB_PORT}"
      ]
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ~/.volumes/example/database/postgresql:/var/lib/postgresql/data
    networks:
      - example-network
    tty: true

  api:
    build:
      context: ../
      dockerfile: ./.docker/Dockerfile
    image: throyer/example/dev:latest
    container_name: example-api
    links:
      - database
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    volumes:
      - ../:/server
      - ~/.m2:/root/.m2
    working_dir: /server
    networks:
      - example-network
    tty: true
    env_file: "./.env"
    entrypoint: [
      "dockerize",
      "-wait",
      "tcp://database:${DB_PORT}",
      "-timeout",
      "20s",
      'mvn',
      'spring-boot:run',
      '-Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,address=*:${DEBUG_PORT},suspend=n"'
    ]

networks:
  example-network:
    driver: bridge
    name: example